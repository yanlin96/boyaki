# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# type Todo @model {
#   id: ID!
#   name: String!
#   description: String
# }

type Post
  @model (
    mutations: {create: "createPost", delete: "deletePost", update: null}
    timestamps: null
  )
  @auth(rules: [
    {allow: owner, ownerField:"owner", provider: userPools, operations:[read, create, delete]}
    {allow: private, provider: userPools, operations:[read]}
    {allow: private, provider: iam ,operations:[create]} #追加
  ])
{
  type: String! @index(name: "SortByTimestamp", sortKeyFields: ["timestamp"], queryField: "listPostsSortedByTimestamp")
  id: ID
  content: String!
  owner: String @index(name: "BySpecificOwner", sortKeyFields: ["timestamp"], queryField: "listPostsBySpecificOwner")
  timestamp: Int! 
}
  
type FollowRelationship
	@model(
    mutations: {create: "createFollowRelationship", delete: "deleteFollowRelationship", update: null}
    timestamps: null
  )
	@auth(rules: [
		{allow: owner, ownerField:"ofollowerId", provider: userPools, operations:[read, create, delete]},
		{allow: private, provider: userPools, operations:[read]}
    {allow: private, provider: iam ,operations:[create]} #追加
	])
{
	followeeId: ID! @primaryKey(sortKeyFields: ["followerId"]) 
	followerId: ID!
	timestamp: Int!
}
      
type Timeline 
	@model(
    mutations: {create: "createTimeline", delete: null, update: null}
    timestamps: null
  )
	@auth(rules: [
    {allow: owner, ownerField: "userId", provider: userPools, operations:[read, create]},
    {allow: private, provider: iam ,operations:[create]},
	])
{
	userId: ID! @primaryKey(sortKeyFields:["timestamp"])
	timestamp: Int!
	postId: ID!
	post: Post @connection(fields: ["postId"])
}

type Mutation
{
  createPostAndTimeline(
		content: String!
	): Post
    @function(name: "createPostAndTimeline-${env}")
    @auth(rules: [
      {allow: private, provider: userPools},
    ])
}

